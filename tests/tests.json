[
  {
    "code": "1+\n",
    "expect": null,
    "input": []
  },
  {
    "code": "1+---+-+-2\n",
    "expect": "",
    "input": []
  },
  {
    "code": "\n\n\n\n\n1+---+-+-2\n",
    "expect": "",
    "input": []
  },
  {
    "code": "print(1+2)",
    "expect": "3\n",
    "input": []
  },
  {
    "code": "a fifty-fifty True\nb fifty-fifty False\nprint(a)\nprint(b)\nprint(a and b)\n",
    "expect": "1\n0\n0\n",
    "input": []
  },

  {
    "code": "othera fifty-fifty 5\nduring (othera!=2){\nothera fifty-fifty othera-1\nprint(othera)\n}",
    "expect": "4\n3\n2\n",
    "input": []
  },

  {
    "code": "hmmm abc(test , askjdkas){\nprint(1)\nisit(test ==2){\n    print(123123)\n}}\nabc(2,2)\n",
    "expect": "1\n123123\n",
    "input": []
  },

  {
    "code": "hmmm fibbonacci(n) {\nisit(n == 0){\n   return 0\n} other{\n     isit(n == 1) {\n         return 1\n} other {\n         return (fibbonacci(n-1) + fibbonacci(n-2))\n }}\nreturn 0\n}\n c  fifty-fifty fibbonacci(35) \n print(c)",
    "expect": "9227465\n",
    "input": []
  },
  {
    "code": "hmmm test(){\nprint(1)\nreturn 0\n}\n\ntest()\n",
    "expect": "1\n",
    "input": ""
  }
]
